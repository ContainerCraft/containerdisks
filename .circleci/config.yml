version: '2.1'
orbs:
  slack: circleci/slack@4.5.0

aliases:
  - &platform_parameter
      platform:
        type: enum
        enum: ["amd64", "arm64"]
        default: amd64

workflows:
  build-and-cache:
    jobs:
      - qcow2:
          name: bake-arm64
          target: ubuntu
          platform: arm64
          executor: arm64

jobs:
  qcow2:
    parameters:
      target:
        type: string
      << : *platform_parameter
      executor:
        type: executor
        default: amd64
    executor: << parameters.executor >>
    environment:
      FLAVOR: ubuntu
      VERSION: "18.04"
      RELEASE: "bionic"
    steps:
      - checkout
      - prepare
      - download_qcow2
      - ops_notify_err

commands:
  # CMD: Slack Notify if ERR
  ops_notify_err:
    description: "Alert Ops if Abort Failures Occur"
    steps:
      - slack/notify:
          event: fail
          channel: ops-kargo
          template: basic_fail_1
          #custom: '{"blocks":[{"type":"section","text":{"type":"mrkdwn","text":"Failure Abort :${CIRCLE_JOB}: github.com/containercraft/kmi/tree/${CIRCLE_BRANCH}"}}]}'
  # CMD: Prepare Host Build Dependencies
  prepare:
    description: "Host Preparedness"
    steps:
      - run:
          command: "sudo apt-get update && sudo apt-get install -y jq curl qemu-user libguestfs-tools qemu-user-static"
      - run:
          command: "echo ${DOCKERHUB_PASSWORD} | docker login -u ${DOCKERHUB_USERNAME} --password-stdin"
  # CMD: Download qcow2
  download_qcow2:
    description: "Host Preparedness"
    steps:
      - restore_cache:
          key: qcow2-ubuntu-bionic-arm64-origin-{{ checksum "preview/ubuntu/sha256sum.arm64.txt" }}
      - run:
          command: curl --output origin.${FLAVOR}-${VERSION}-${ARCH}.qcow2 -L https://cloud-images.ubuntu.com/bionic/current/bionic-server-cloudimg-${ARCH}.img
      - run:
          command: qemu-img resize origin.${FLAVOR}-${VERSION}-${ARCH}.qcow2 +20G
      - run:
          command: sudo virt-sparsify --verbose --compress origin.${FLAVOR}-${VERSION}-${ARCH}.qcow2 wip.${FLAVOR}-${VERSION}-${ARCH}.qcow2
      - run:
          command: |
            sudo virt-sysprep --verbose --add wip.${FLAVOR}-${VERSION}-${ARCH}.qcow2 --network \
              --enable user-account,logfiles,customize,bash-history,net-hostname,net-hwaddr,machine-id,dhcp-server-state,dhcp-client-state,yum-uuid,udev-persistent-net,tmp-files,smolt-uuid,rpm-db,package-manager-cache
      - save_cache:
          key: qcow2-ubuntu-bionic-arm64-origin-{{ checksum "preview/ubuntu/sha256sum.arm64.txt" }}
          paths:
            - cache/arm64/wip.ubuntu-18.04-arm64.qcow2
  # CMD: Configure Docker BuildX
  enable_buildx:
    description: "Prepare the CircleCI machine for using buildx"
    parameters:
      buildkit_version:
        type: string
        default: v0.9.3
    steps:
      - run:
          command: 'docker run --privileged --rm tonistiigi/binfmt --install all'
      - run:
          command: 'docker buildx ls | grep "build-<< parameters.buildkit_version >>"'
      - ops_notify_err

  # CMD: Run Buildx
  buildx:
    description: "Run 'docker buildx'"
    parameters:
      bake_file:
        type: string
        default: bake.hcl
      target:
        type: string
      << : *platform_parameter
    steps:
      - run:
          command: |
            docker buildx bake \
              -f << parameters.bake_file >> \
              --progress plain \
              --set *.platform=linux/<< parameters.platform >> \
              << parameters.target >>

executors:
  arm64:
    machine:
      enabled: true
      image: ubuntu-2004:202111-01
    environment:
      ARCH: arm64
      DOCKER_CLI_EXPERIMENTAL: enabled
    resource_class: arm.large
  amd64:
    machine:
      enabled: true
      image: ubuntu-2004:202111-01
    environment:
      ARCH: amd64
      DOCKER_CLI_EXPERIMENTAL: enabled
    resource_class: large
